¼

2D:\Repositorios\APIGateway\Catalogo.API\Program.cs
	namespace 	
Catalogo
 
. 
API 
{ 
public 

static 
class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{		 	
CreateHostBuilder

 
(

 
args

 "
)

" #
.

# $
Build

$ )
(

) *
)

* +
.

+ ,
Run

, /
(

/ 0
)

0 1
;

1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} §
2D:\Repositorios\APIGateway\Catalogo.API\Startup.cs
	namespace		 	
Catalogo		
 
.		 
API		 
{

 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
	Configure 
( 
IApplicationBuilder 1
app2 5
,5 6*
IApiVersionDescriptionProvider7 U
providerV ^
)^ _
{ 	
app 
. 

UseRouting 
( 
) 
; 
app 
. 
UseEndpoints 
( 
	endpoints &
=>' )
{* +
	endpoints, 5
.5 6
MapControllers6 D
(D E
)E F
;F G
}H I
)I J
;J K
app 
. 

UseSwagger 
( 
) 
; 
_ 
= 
app 
. 
UseSwaggerUI  
(  !
options 
=> 
{ 
foreach 
( !
ApiVersionDescription 2
description3 >
in? A
providerB J
.J K"
ApiVersionDescriptionsK a
)a b
{ 
options 
.  
SwaggerEndpoint  /
(/ 0
$"0 2
	/swagger/2 ;
{; <
description< G
.G H
	GroupNameH Q
}Q R
/swagger.jsonR _
"_ `
,` a
descriptionb m
.m n
	GroupNamen w
.w x
ToUpperInvariant	x ˆ
(
ˆ ‰
)
‰ Š
)
Š ‹
;
‹ Œ
} 
}   
)   
;   
}!! 	
public## 
void## 
ConfigureServices## %
(##% &
IServiceCollection##& 8
services##9 A
)##A B
{$$ 	
services%% 
.%% 
AddMvc%% 
(%% 
options%% #
=>%%$ &
options%%' .
.%%. /!
EnableEndpointRouting%%/ D
=%%E F
true%%G K
)%%K L
;%%L M
services&& 
.&& 
AddApiVersioning&& %
(&&% &
options'' 
=>'' 
{(( 
options)) 
.)) 
ReportApiVersions)) -
=)). /
true))0 4
;))4 5
}** 
)** 
;** 
services++ 
.++ #
AddVersionedApiExplorer++ ,
(++, -
options,, 
=>,, 
{-- 
options.. 
... 
GroupNameFormat.. +
=.., -
$str... 6
;..6 7
options00 
.00 %
SubstituteApiVersionInUrl00 5
=006 7
true008 <
;00< =
}11 
)11 
;11 
services22 
.22 
AddTransient22 !
<22! "
IConfigureOptions22" 3
<223 4
SwaggerGenOptions224 E
>22E F
,22F G#
ConfigureSwaggerOptions22H _
>22_ `
(22` a
)22a b
;22b c
services33 
.33 
AddSwaggerGen33 "
(33" #
options44 
=>44 
{55 
options66 
.66 
OperationFilter66 +
<66+ , 
SwaggerDefaultValues66, @
>66@ A
(66A B
)66B C
;66C D
}77 
)77 
;77 
}88 	
}99 
}:: Š
ID:\Repositorios\APIGateway\Catalogo.API\V1\Controllers\TesteController.cs
	namespace 	
Catalogo
 
. 
API 
. 
V1 
. 
Controllers %
{		 
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
[ 

ApiVersion 
( 
$str 
, 

Deprecated !
=" #
true$ (
)( )
]) *
[ 
Route 

(
 
$str 
) 
] 
public 

class 
TesteController  
:! "
ControllerBase# 1
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str !
,! "
$str# +
,+ ,
$str- 3
,3 4
$str5 ;
,; <
$str= C
,C D
$strE L
,L M
$strN S
,S T
$strU a
,a b
$strc n
} 	
;	 

private 
readonly 
ILogger  
<  !
TesteController! 0
>0 1
_logger2 9
;9 :
public 
TesteController 
( 
ILogger &
<& '
TesteController' 6
>6 7
logger8 >
)> ?
{ 	
_logger 
= 
logger 
; 
} 	
[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
WeatherForecast *
>* +
Get, /
(/ 0
)0 1
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return   

Enumerable   
.   
Range   #
(  # $
$num  $ %
,  % &
$num  ' (
)  ( )
.  ) *
Select  * 0
(  0 1
index  1 6
=>  7 9
new  : =
WeatherForecast  > M
{!! 
Date"" 
="" 
DateTime"" 
.""  
Now""  #
.""# $
AddDays""$ +
(""+ ,
index"", 1
)""1 2
,""2 3
TemperatureC## 
=## 
rng## "
.##" #
Next### '
(##' (
-##( )
$num##) +
,##+ ,
$num##- /
)##/ 0
,##0 1
Summary$$ 
=$$ 
	Summaries$$ #
[$$# $
rng$$$ '
.$$' (
Next$$( ,
($$, -
	Summaries$$- 6
.$$6 7
Length$$7 =
)$$= >
]$$> ?
}%% 
)%% 
.&& 
ToArray&& 
(&& 
)&& 
;&& 
}'' 	
}(( 
})) ¨
DD:\Repositorios\APIGateway\Catalogo.API\V1\Models\WeatherForecast.cs
	namespace 	
Catalogo
 
. 
API 
. 
V1 
. 
Models  
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} ó
ID:\Repositorios\APIGateway\Catalogo.API\V2\Controllers\TesteController.cs
	namespace 	
Catalogo
 
. 
API 
. 
V2 
. 
Controllers %
{		 
[

 
ApiController

 
]

 
[ 

ApiVersion 
( 
$str 
) 
] 
[ 
Route 

(
 
$str 
) 
] 
public 

class 
TesteController  
:! "
ControllerBase# 1
{ 
private 
static 
readonly 
string  &
[& '
]' (
	Summaries) 2
=3 4
new5 8
[8 9
]9 :
{ 	
$str 
, 
$str 
, 
$str #
,# $
$str% ,
,, -
$str. 5
,5 6
$str7 >
,> ?
$str@ G
,G H
$strI O
,O P
$strQ X
,X Y
$strZ `
} 	
;	 

[ 	
HttpGet	 
] 
public 
IEnumerable 
< 
object !
>! "
Get# &
(& '
)' (
{ 	
var 
rng 
= 
new 
Random  
(  !
)! "
;" #
return 

Enumerable 
. 
Range #
(# $
$num$ %
,% &
$num' (
)( )
.) *
Select* 0
(0 1
index1 6
=>7 9
new: =
{ 
tes 
= 
DateTime 
. 
Now "
." #
AddDays# *
(* +
index+ 0
)0 1
,1 2
asd 
= 
rng 
. 
Next 
( 
-  
$num  "
," #
$num$ &
)& '
,' (
fsdaf 
= 
	Summaries !
[! "
rng" %
.% &
Next& *
(* +
	Summaries+ 4
.4 5
Length5 ;
); <
]< =
} 
) 
. 
ToArray 
( 
) 
; 
} 	
}   
}!! ¨
DD:\Repositorios\APIGateway\Catalogo.API\V2\Models\WeatherForecast.cs
	namespace 	
Catalogo
 
. 
API 
. 
V2 
. 
Models  
{ 
public 

class 
WeatherForecast  
{ 
public 
DateTime 
Date 
{ 
get "
;" #
set$ '
;' (
}) *
public		 
int		 
TemperatureC		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public 
int 
TemperatureF 
=>  "
$num# %
+& '
(( )
int) ,
), -
(- .
TemperatureC. :
/; <
$num= C
)C D
;D E
public 
string 
Summary 
{ 
get  #
;# $
set% (
;( )
}* +
} 
} 